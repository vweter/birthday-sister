// –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–µ–∫—Ü–∏—è–º
function scrollToSection(sectionId) {
    const section = document.getElementById(sectionId);
    if (section) {
        section.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
        });
    }
}

// –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä
let isPlaying = false;
const audio = document.getElementById('bgMusic');
const playBtn = document.querySelector('.play-btn');

function toggleMusic() {
    if (isPlaying) {
        audio.pause();
        playBtn.textContent = '‚ñ∂Ô∏è';
        isPlaying = false;
    } else {
        // –ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –º—É–∑—ã–∫—É
        const playPromise = audio.play();

        if (playPromise !== undefined) {
            playPromise.then(() => {
                playBtn.textContent = '‚è∏Ô∏è';
                isPlaying = true;
                console.log('–ú—É–∑—ã–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä–∞—Ç—å');
            }).catch(error => {
                console.log('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
                // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                alert('–ú—É–∑—ã–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ YouTube –ø–ª–µ–µ—Ä –Ω–∏–∂–µ!');
                playBtn.textContent = '‚ùå';
            });
        }
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ
audio.addEventListener('loadeddata', function() {
    console.log('–ê—É–¥–∏–æ —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
});

audio.addEventListener('error', function(e) {
    console.log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ:', e);
    playBtn.textContent = '‚ùå';
    playBtn.style.background = '#ff4444';
});

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
function animateOnScroll() {
    const elements = document.querySelectorAll('.wish-card, .memory-item');

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, {
        threshold: 0.1
    });

    elements.forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(30px)';
        el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(el);
    });
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
function createConfetti() {
    const colors = ['#e91e63', '#9c27b0', '#fce4ec', '#f3e5f5', '#e8eaf6'];

    for (let i = 0; i < 50; i++) {
        const confetti = document.createElement('div');
        confetti.style.position = 'fixed';
        confetti.style.width = '10px';
        confetti.style.height = '10px';
        confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
        confetti.style.left = Math.random() * 100 + 'vw';
        confetti.style.top = '-10px';
        confetti.style.borderRadius = '50%';
        confetti.style.pointerEvents = 'none';
        confetti.style.zIndex = '1000';

        document.body.appendChild(confetti);

        const animation = confetti.animate([
            { transform: 'translateY(0px) rotate(0deg)', opacity: 1 },
            { transform: `translateY(${window.innerHeight + 100}px) rotate(${Math.random() * 360}deg)`, opacity: 0 }
        ], {
            duration: Math.random() * 3000 + 2000,
            easing: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)'
        });

        animation.onfinish = () => {
            confetti.remove();
        };
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–¥–µ—á–µ–∫
function createHearts() {
    const heart = document.createElement('div');
    heart.innerHTML = 'üíñ';
    heart.style.position = 'fixed';
    heart.style.fontSize = '20px';
    heart.style.left = Math.random() * 100 + 'vw';
    heart.style.top = '100vh';
    heart.style.pointerEvents = 'none';
    heart.style.zIndex = '999';
    heart.style.animation = 'float 4s ease-in-out';

    document.body.appendChild(heart);

    setTimeout(() => {
        heart.remove();
    }, 4000);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    // –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–π
    animateOnScroll();

    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
    setInterval(createConfetti, 3000);

    // –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–¥–µ—á–µ–∫ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
    setInterval(createHearts, 2000);

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–∞—Ä–∞–ª–ª–∞–∫—Å–∞ –¥–ª—è —Ñ–æ–Ω–∞
    window.addEventListener('scroll', function() {
        const scrolled = window.pageYOffset;
        const parallax = document.querySelector('.hero');
        const speed = scrolled * 0.5;

        if (parallax) {
            parallax.style.transform = `translateY(${speed}px)`;
        }
    });

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏
    const buttons = document.querySelectorAll('.cta-button, .restart-btn');
    buttons.forEach(button => {
        button.addEventListener('click', function(e) {
            // –°–æ–∑–¥–∞–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø—É–ª—å—Å–∞—Ü–∏–∏
            const ripple = document.createElement('span');
            const rect = this.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            const x = e.clientX - rect.left - size / 2;
            const y = e.clientY - rect.top - size / 2;

            ripple.style.width = ripple.style.height = size + 'px';
            ripple.style.left = x + 'px';
            ripple.style.top = y + 'px';
            ripple.classList.add('ripple');

            this.appendChild(ripple);

            setTimeout(() => {
                ripple.remove();
            }, 600);
        });
    });

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø—É–ª—å—Å–∞—Ü–∏–∏
    const style = document.createElement('style');
    style.textContent = `
        .ripple {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.6);
            transform: scale(0);
            animation: ripple-animation 0.6s linear;
            pointer-events: none;
        }

        @keyframes ripple-animation {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }

        .cta-button, .restart-btn {
            position: relative;
            overflow: hidden;
        }
    `;
    document.head.appendChild(style);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∫–ª–∏–∫–µ
    let firstClick = true;
    document.addEventListener('click', function() {
        if (firstClick && !isPlaying) {
            firstClick = false;
            setTimeout(() => {
                toggleMusic();
            }, 1000);
        }
    });

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–µ—á–∞—Ç–∞—é—â–µ–≥–æ—Å—è —Ç–µ–∫—Å—Ç–∞
    const typeWriter = (element, text, speed = 100) => {
        let i = 0;
        element.innerHTML = '';

        function type() {
            if (i < text.length) {
                element.innerHTML += text.charAt(i);
                i++;
                setTimeout(type, speed);
            }
        }
        type();
    };

    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–µ—á–∞—Ç–∞–Ω–∏—è –∫ –∑–∞–≥–æ–ª–æ–≤–∫—É
    const title = document.querySelector('.title');
    if (title) {
        const originalText = title.textContent;
        setTimeout(() => {
            typeWriter(title, originalText, 150);
        }, 1000);
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∞—É–¥–∏–æ
audio.addEventListener('error', function() {
    console.log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞');
    playBtn.style.display = 'none';
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ hover –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
document.addEventListener('DOMContentLoaded', function() {
    const cards = document.querySelectorAll('.wish-card, .memory-item');

    cards.forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-10px) scale(1.02)';
        });

        card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0) scale(1)';
        });
    });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–Ω–µ–∂–∏–Ω–æ–∫ (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –∫–æ–Ω—Ñ–µ—Ç—Ç–∏)
function createSnowflakes() {
    const snowflake = document.createElement('div');
    snowflake.innerHTML = '‚ùÑÔ∏è';
    snowflake.style.position = 'fixed';
    snowflake.style.fontSize = '15px';
    snowflake.style.left = Math.random() * 100 + 'vw';
    snowflake.style.top = '-20px';
    snowflake.style.pointerEvents = 'none';
    snowflake.style.zIndex = '998';
    snowflake.style.animation = 'snowfall 6s linear';

    document.body.appendChild(snowflake);

    setTimeout(() => {
        snowflake.remove();
    }, 6000);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –¥–ª—è —Å–Ω–µ–∂–∏–Ω–æ–∫
const snowStyle = document.createElement('style');
snowStyle.textContent = `
    @keyframes snowfall {
        0% {
            transform: translateY(-20px) rotate(0deg);
            opacity: 1;
        }
        100% {
            transform: translateY(100vh) rotate(360deg);
            opacity: 0;
        }
    }
`;
document.head.appendChild(snowStyle);

// –ó–∞–ø—É—Å–∫ —Å–Ω–µ–∂–∏–Ω–æ–∫ –∫–∞–∂–¥—ã–µ 4 —Å–µ–∫—É–Ω–¥—ã
setInterval(createSnowflakes, 4000);

// –°–ª—É—á–∞–π–Ω—ã–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã
const compliments = [
    "–¢—ã —Å–∞–º–∞—è –ª—É—á—à–∞—è —Å–µ—Å—Ç—Ä–∞ –≤ –º–∏—Ä–µ! üíñ",
    "–¢–≤–æ—è —É–ª—ã–±–∫–∞ –æ—Å–≤–µ—â–∞–µ—Ç –≤–µ—Å—å –º–∏—Ä! ‚ú®",
    "–¢—ã –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤–∞—è! üåü",
    "–° —Ç–æ–±–æ–π –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–∫—É—á–Ω–æ! üòÑ",
    "–¢—ã —Å–∞–º–∞—è –∫—Ä–∞—Å–∏–≤–∞—è! üëë",
    "–¢–≤–æ—è –¥–æ–±—Ä–æ—Ç–∞ –ø–æ–∫–æ—Ä—è–µ—Ç —Å–µ—Ä–¥—Ü–∞! üíù",
    "–¢—ã –º–æ—è –≥–æ—Ä–¥–æ—Å—Ç—å! üèÜ",
    "–° —Ç–æ–±–æ–π –≤—Å–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ª—É—á—à–µ! üåà",
    "–¢—ã –Ω–∞—Å—Ç–æ—è—â–∞—è –ø—Ä–∏–Ω—Ü–µ—Å—Å–∞! üë∏",
    "–¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –∑–∞—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–∞! ‚ö°",
    "–¢—ã —Å–∞–º–∞—è —É–º–Ω–∞—è! üß†",
    "–¢–≤–æ—è —Å–∏–ª–∞ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç! üí™",
    "–¢—ã —Å–∞–º–∞—è –∑–∞–±–æ—Ç–ª–∏–≤–∞—è! ü§ó",
    "–¢–≤–æ—è –¥—É—à–∞ –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞! üå∏",
    "–¢—ã –º–æ—è –ª—É—á—à–∞—è –ø–æ–¥—Ä—É–≥–∞! üëØ‚Äç‚ôÄÔ∏è"
];

function showRandomCompliment() {
    const complimentText = document.getElementById('compliment-text');
    const randomCompliment = compliments[Math.floor(Math.random() * compliments.length)];

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    complimentText.style.opacity = '0';
    complimentText.style.transform = 'scale(0.8)';

    setTimeout(() => {
        complimentText.textContent = randomCompliment;
        complimentText.style.opacity = '1';
        complimentText.style.transform = 'scale(1)';

        // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∞
        createConfetti();
    }, 300);
}

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–≤
const complimentStyle = document.createElement('style');
complimentStyle.textContent = `
    #compliment-text {
        transition: all 0.3s ease;
    }
`;
document.head.appendChild(complimentStyle);
